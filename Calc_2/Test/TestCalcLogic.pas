unit TestCalcLogic;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  System.SysUtils, System.Classes, Variants, TestFramework, CalcLogic, DUnitTestingCore, TestStructureUnit, RTTI;

type
  // Test methods for class TCalcLogic

  TestTCalcLogic = class(TCoreTestCase)
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestAdd;
    procedure TestSub;
  end;

  TestTCalcLogic1 = class(TCoreTestCase)
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestMul;
    procedure TestDiv;
  end;

implementation

procedure TestTCalcLogic.SetUp;
begin
  ParamValue := DataArray.Items[Self.FTestName];
  ExpectedResult := ParamValue[2];
  FailMessage := ParamValue[3].AsString;
  Operation := ParamValue[4].AsString;
end;


procedure TestTCalcLogic.TearDown;
begin
end;


procedure TestTCalcLogic.TestAdd;
begin
  RunMethod(TCalcLogic, 'Add', ParamValue, MT_FUNCTION, ExpectedResult, Operation, FailMessage);
end;


procedure TestTCalcLogic.TestSub;
begin
  RunMethod(TCalcLogic, 'Sub', ParamValue, MT_FUNCTION, ExpectedResult, Operation, FailMessage);
end;


procedure TestTCalcLogic1.SetUp;
begin
  ParamValue := DataArray.Items[Self.FTestName];
  ExpectedResult := ParamValue[2];
  FailMessage := ParamValue[3].AsVariant;
  Operation := ParamValue[4].AsVariant;
end;


procedure TestTCalcLogic1.TearDown;
begin
end;


procedure TestTCalcLogic1.TestMul;
begin
  RunMethod(TCalcLogic, 'Mul', ParamValue, MT_FUNCTION, ExpectedResult, Operation, FailMessage);
end;


procedure TestTCalcLogic1.TestDiv;
begin
  RunMethod(TCalcLogic, 'Division', ParamValue, MT_FUNCTION, ExpectedResult, Operation, FailMessage);
end;

initialization
end.

